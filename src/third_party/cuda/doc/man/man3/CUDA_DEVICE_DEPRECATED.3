.TH "Device Management [DEPRECATED]" 3 "12 Jan 2017" "Version 6.0" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Device Management [DEPRECATED] \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBCUresult\fP \fBcuDeviceComputeCapability\fP (int *major, int *minor, \fBCUdevice\fP dev)"
.br
.RI "\fIReturns the compute capability of the device. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuDeviceGetProperties\fP (\fBCUdevprop\fP *prop, \fBCUdevice\fP dev)"
.br
.RI "\fIReturns properties for a selected device. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\\brief deprecated device management functions of the low-level CUDA driver API (\fBcuda.h\fP)
.PP
This section describes the device management functions of the low-level CUDA driver application programming interface. 
.SH "Function Documentation"
.PP 
.SS "\fBCUresult\fP cuDeviceComputeCapability (int * major, int * minor, \fBCUdevice\fP dev)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
This function was deprecated as of CUDA 5.0 and its functionality superceded by \fBcuDeviceGetAttribute()\fP.
.PP
Returns in \fC*major\fP and \fC*minor\fP the major and minor revision numbers that define the compute capability of the device \fCdev\fP.
.PP
\fBParameters:\fP
.RS 4
\fImajor\fP - Major revision number 
.br
\fIminor\fP - Minor revision number 
.br
\fIdev\fP - Device handle
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_INVALID_DEVICE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuDeviceGetAttribute\fP, \fBcuDeviceGetCount\fP, \fBcuDeviceGetName\fP, \fBcuDeviceGet\fP, \fBcuDeviceTotalMem\fP 
.RE
.PP

.SS "\fBCUresult\fP cuDeviceGetProperties (\fBCUdevprop\fP * prop, \fBCUdevice\fP dev)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
This function was deprecated as of CUDA 5.0 and replaced by \fBcuDeviceGetAttribute()\fP.
.PP
Returns in \fC*prop\fP the properties of device \fCdev\fP. The \fBCUdevprop\fP structure is defined as:
.PP
.PP
.nf
     typedef struct CUdevprop_st {
     int maxThreadsPerBlock;
     int maxThreadsDim[3];
     int maxGridSize[3];
     int sharedMemPerBlock;
     int totalConstantMemory;
     int SIMDWidth;
     int memPitch;
     int regsPerBlock;
     int clockRate;
     int textureAlign
  } CUdevprop;
.fi
.PP
 where:
.PP
.IP "\(bu" 2
maxThreadsPerBlock is the maximum number of threads per block;
.IP "\(bu" 2
maxThreadsDim[3] is the maximum sizes of each dimension of a block;
.IP "\(bu" 2
maxGridSize[3] is the maximum sizes of each dimension of a grid;
.IP "\(bu" 2
sharedMemPerBlock is the total amount of shared memory available per block in bytes;
.IP "\(bu" 2
totalConstantMemory is the total amount of constant memory available on the device in bytes;
.IP "\(bu" 2
SIMDWidth is the warp size;
.IP "\(bu" 2
memPitch is the maximum pitch allowed by the memory copy functions that involve memory regions allocated through \fBcuMemAllocPitch()\fP;
.IP "\(bu" 2
regsPerBlock is the total number of registers available per block;
.IP "\(bu" 2
clockRate is the clock frequency in kilohertz;
.IP "\(bu" 2
textureAlign is the alignment requirement; texture base addresses that are aligned to textureAlign bytes do not need an offset applied to texture fetches.
.PP
.PP
\fBParameters:\fP
.RS 4
\fIprop\fP - Returned properties of device 
.br
\fIdev\fP - Device to get properties for
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_INVALID_DEVICE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuDeviceGetAttribute\fP, \fBcuDeviceGetCount\fP, \fBcuDeviceGetName\fP, \fBcuDeviceGet\fP, \fBcuDeviceTotalMem\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code.
