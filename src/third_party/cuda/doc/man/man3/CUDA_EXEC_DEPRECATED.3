.TH "Execution Control [DEPRECATED]" 3 "12 Jan 2017" "Version 6.0" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Execution Control [DEPRECATED] \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBCUresult\fP \fBcuFuncSetBlockShape\fP (\fBCUfunction\fP hfunc, int x, int y, int z)"
.br
.RI "\fISets the block-dimensions for the function. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuFuncSetSharedSize\fP (\fBCUfunction\fP hfunc, unsigned int bytes)"
.br
.RI "\fISets the dynamic shared-memory size for the function. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuLaunch\fP (\fBCUfunction\fP f)"
.br
.RI "\fILaunches a CUDA function. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuLaunchGrid\fP (\fBCUfunction\fP f, int grid_width, int grid_height)"
.br
.RI "\fILaunches a CUDA function. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuLaunchGridAsync\fP (\fBCUfunction\fP f, int grid_width, int grid_height, \fBCUstream\fP hStream)"
.br
.RI "\fILaunches a CUDA function. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuParamSetf\fP (\fBCUfunction\fP hfunc, int offset, float value)"
.br
.RI "\fIAdds a floating-point parameter to the function's argument list. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuParamSeti\fP (\fBCUfunction\fP hfunc, int offset, unsigned int value)"
.br
.RI "\fIAdds an integer parameter to the function's argument list. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuParamSetSize\fP (\fBCUfunction\fP hfunc, unsigned int numbytes)"
.br
.RI "\fISets the parameter size for the function. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuParamSetTexRef\fP (\fBCUfunction\fP hfunc, int texunit, \fBCUtexref\fP hTexRef)"
.br
.RI "\fIAdds a texture-reference to the function's argument list. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuParamSetv\fP (\fBCUfunction\fP hfunc, int offset, void *ptr, unsigned int numbytes)"
.br
.RI "\fIAdds arbitrary data to the function's argument list. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\\brief deprecated execution control functions of the low-level CUDA driver API (\fBcuda.h\fP)
.PP
This section describes the deprecated execution control functions of the low-level CUDA driver application programming interface. 
.SH "Function Documentation"
.PP 
.SS "\fBCUresult\fP cuFuncSetBlockShape (\fBCUfunction\fP hfunc, int x, int y, int z)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Specifies the \fCx\fP, \fCy\fP, and \fCz\fP dimensions of the thread blocks that are created when the kernel given by \fChfunc\fP is launched.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to specify dimensions of 
.br
\fIx\fP - X dimension 
.br
\fIy\fP - Y dimension 
.br
\fIz\fP - Z dimension
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_HANDLE\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetSharedSize\fP, \fBcuFuncSetCacheConfig\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSeti\fP, \fBcuParamSetf\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuFuncSetSharedSize (\fBCUfunction\fP hfunc, unsigned int bytes)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Sets through \fCbytes\fP the amount of dynamic shared memory that will be available to each thread block when the kernel given by \fChfunc\fP is launched.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to specify dynamic shared-memory size for 
.br
\fIbytes\fP - Dynamic shared-memory size per thread in bytes
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_HANDLE\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetCacheConfig\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSeti\fP, \fBcuParamSetf\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuLaunch (\fBCUfunction\fP f)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Invokes the kernel \fCf\fP on a 1 x 1 x 1 grid of blocks. The block contains the number of threads specified by a previous call to \fBcuFuncSetBlockShape()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIf\fP - Kernel to launch
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_LAUNCH_FAILED\fP, \fBCUDA_ERROR_LAUNCH_OUT_OF_RESOURCES\fP, \fBCUDA_ERROR_LAUNCH_TIMEOUT\fP, \fBCUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING\fP, \fBCUDA_ERROR_SHARED_OBJECT_INIT_FAILED\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSetf\fP, \fBcuParamSeti\fP, \fBcuParamSetv\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuLaunchGrid (\fBCUfunction\fP f, int grid_width, int grid_height)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Invokes the kernel \fCf\fP on a \fCgrid_width\fP x \fCgrid_height\fP grid of blocks. Each block contains the number of threads specified by a previous call to \fBcuFuncSetBlockShape()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIf\fP - Kernel to launch 
.br
\fIgrid_width\fP - Width of grid in blocks 
.br
\fIgrid_height\fP - Height of grid in blocks
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_LAUNCH_FAILED\fP, \fBCUDA_ERROR_LAUNCH_OUT_OF_RESOURCES\fP, \fBCUDA_ERROR_LAUNCH_TIMEOUT\fP, \fBCUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING\fP, \fBCUDA_ERROR_SHARED_OBJECT_INIT_FAILED\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSetf\fP, \fBcuParamSeti\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuLaunchGridAsync (\fBCUfunction\fP f, int grid_width, int grid_height, \fBCUstream\fP hStream)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Invokes the kernel \fCf\fP on a \fCgrid_width\fP x \fCgrid_height\fP grid of blocks. Each block contains the number of threads specified by a previous call to \fBcuFuncSetBlockShape()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIf\fP - Kernel to launch 
.br
\fIgrid_width\fP - Width of grid in blocks 
.br
\fIgrid_height\fP - Height of grid in blocks 
.br
\fIhStream\fP - Stream identifier
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_HANDLE\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_LAUNCH_FAILED\fP, \fBCUDA_ERROR_LAUNCH_OUT_OF_RESOURCES\fP, \fBCUDA_ERROR_LAUNCH_TIMEOUT\fP, \fBCUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING\fP, \fBCUDA_ERROR_SHARED_OBJECT_INIT_FAILED\fP
.RE
.PP
\fBNote:\fP
.RS 4
In certain cases where cubins are created with no ABI (i.e., using \fCptxas\fP \fC--abi-compile\fP \fCno\fP), this function may serialize kernel launches. In order to force the CUDA driver to retain asynchronous behavior, set the \fBCU_CTX_LMEM_RESIZE_TO_MAX\fP flag during context creation (see \fBcuCtxCreate\fP).
.PP
This function uses standard  semantics. 
.PP
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSetf\fP, \fBcuParamSeti\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuParamSetf (\fBCUfunction\fP hfunc, int offset, float value)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Sets a floating-point parameter that will be specified the next time the kernel corresponding to \fChfunc\fP will be invoked. \fCoffset\fP is a byte offset.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to add parameter to 
.br
\fIoffset\fP - Offset to add parameter to argument list 
.br
\fIvalue\fP - Value of parameter
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSeti\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuParamSeti (\fBCUfunction\fP hfunc, int offset, unsigned int value)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Sets an integer parameter that will be specified the next time the kernel corresponding to \fChfunc\fP will be invoked. \fCoffset\fP is a byte offset.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to add parameter to 
.br
\fIoffset\fP - Offset to add parameter to argument list 
.br
\fIvalue\fP - Value of parameter
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSetf\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuParamSetSize (\fBCUfunction\fP hfunc, unsigned int numbytes)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Sets through \fCnumbytes\fP the total size in bytes needed by the function parameters of the kernel corresponding to \fChfunc\fP.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to set parameter size for 
.br
\fInumbytes\fP - Size of parameter list in bytes
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetf\fP, \fBcuParamSeti\fP, \fBcuParamSetv\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SS "\fBCUresult\fP cuParamSetTexRef (\fBCUfunction\fP hfunc, int texunit, \fBCUtexref\fP hTexRef)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Makes the CUDA array or linear memory bound to the texture reference \fChTexRef\fP available to a device program as a texture. In this version of CUDA, the texture-reference must be obtained via \fBcuModuleGetTexRef()\fP and the \fCtexunit\fP parameter must be set to \fBCU_PARAM_TR_DEFAULT\fP.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to add texture-reference to 
.br
\fItexunit\fP - Texture unit (must be \fBCU_PARAM_TR_DEFAULT\fP) 
.br
\fIhTexRef\fP - Texture-reference to add to argument list
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches. 
.RE
.PP

.SS "\fBCUresult\fP cuParamSetv (\fBCUfunction\fP hfunc, int offset, void * ptr, unsigned int numbytes)"
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP
Copies an arbitrary amount of data (specified in \fCnumbytes\fP) from \fCptr\fP into the parameter space of the kernel corresponding to \fChfunc\fP. \fCoffset\fP is a byte offset.
.PP
\fBParameters:\fP
.RS 4
\fIhfunc\fP - Kernel to add data to 
.br
\fIoffset\fP - Offset to add data to argument list 
.br
\fIptr\fP - Pointer to arbitrary data 
.br
\fInumbytes\fP - Size of data to copy in bytes
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuFuncSetBlockShape\fP, \fBcuFuncSetSharedSize\fP, \fBcuFuncGetAttribute\fP, \fBcuParamSetSize\fP, \fBcuParamSetf\fP, \fBcuParamSeti\fP, \fBcuLaunch\fP, \fBcuLaunchGrid\fP, \fBcuLaunchGridAsync\fP, \fBcuLaunchKernel\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code.
