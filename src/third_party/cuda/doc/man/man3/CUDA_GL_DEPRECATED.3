.TH "OpenGL Interoperability [DEPRECATED]" 3 "12 Jan 2017" "Version 6.0" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OpenGL Interoperability [DEPRECATED] \- 
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBCUGLmap_flags\fP "
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBCUresult\fP \fBcuGLCtxCreate\fP (\fBCUcontext\fP *pCtx, unsigned int Flags, \fBCUdevice\fP device)"
.br
.RI "\fICreate a CUDA context for interoperability with OpenGL. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLInit\fP (void)"
.br
.RI "\fIInitializes OpenGL interoperability. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLMapBufferObject\fP (\fBCUdeviceptr\fP *dptr, size_t *size, GLuint buffer)"
.br
.RI "\fIMaps an OpenGL buffer object. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLMapBufferObjectAsync\fP (\fBCUdeviceptr\fP *dptr, size_t *size, GLuint buffer, \fBCUstream\fP hStream)"
.br
.RI "\fIMaps an OpenGL buffer object. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLRegisterBufferObject\fP (GLuint buffer)"
.br
.RI "\fIRegisters an OpenGL buffer object. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLSetBufferObjectMapFlags\fP (GLuint buffer, unsigned int Flags)"
.br
.RI "\fISet the map flags for an OpenGL buffer object. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLUnmapBufferObject\fP (GLuint buffer)"
.br
.RI "\fIUnmaps an OpenGL buffer object. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLUnmapBufferObjectAsync\fP (GLuint buffer, \fBCUstream\fP hStream)"
.br
.RI "\fIUnmaps an OpenGL buffer object. \fP"
.ti -1c
.RI "\fBCUresult\fP \fBcuGLUnregisterBufferObject\fP (GLuint buffer)"
.br
.RI "\fIUnregister an OpenGL buffer object. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\\brief deprecated OpenGL interoperability functions of the low-level CUDA driver API (\fBcudaGL.h\fP)
.PP
This section describes deprecated OpenGL interoperability functionality. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBCUGLmap_flags\fP"
.PP
Flags to map or unmap a resource 
.SH "Function Documentation"
.PP 
.SS "\fBCUresult\fP cuGLCtxCreate (\fBCUcontext\fP * pCtx, unsigned int Flags, \fBCUdevice\fP device)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 5.0.
.RE
.PP
This function is deprecated and should no longer be used. It is no longer necessary to associate a CUDA context with an OpenGL context in order to achieve maximum interoperability performance.
.PP
\fBParameters:\fP
.RS 4
\fIpCtx\fP - Returned CUDA context 
.br
\fIFlags\fP - Options for CUDA context creation 
.br
\fIdevice\fP - Device on which to create the context
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_OUT_OF_MEMORY\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuCtxCreate\fP, \fBcuGLInit\fP, \fBcuGLMapBufferObject\fP, \fBcuGLRegisterBufferObject\fP, \fBcuGLUnmapBufferObject\fP, \fBcuGLUnregisterBufferObject\fP, \fBcuGLMapBufferObjectAsync\fP, \fBcuGLUnmapBufferObjectAsync\fP, \fBcuGLSetBufferObjectMapFlags\fP, \fBcuWGLGetDevice\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLInit (void)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Initializes OpenGL interoperability. This function is deprecated and calling it is no longer required. It may fail if the needed OpenGL driver facilities are not available.
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_UNKNOWN\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGLMapBufferObject\fP, \fBcuGLRegisterBufferObject\fP, \fBcuGLUnmapBufferObject\fP, \fBcuGLUnregisterBufferObject\fP, \fBcuGLMapBufferObjectAsync\fP, \fBcuGLUnmapBufferObjectAsync\fP, \fBcuGLSetBufferObjectMapFlags\fP, \fBcuWGLGetDevice\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLMapBufferObject (\fBCUdeviceptr\fP * dptr, size_t * size, GLuint buffer)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Maps the buffer object specified by \fCbuffer\fP into the address space of the current CUDA context and returns in \fC*dptr\fP and \fC*size\fP the base pointer and size of the resulting mapping.
.PP
There must be a valid OpenGL context bound to the current thread when this function is called. This must be the same context, or a member of the same shareGroup, as the context that was bound when the buffer was registered.
.PP
All streams in the current CUDA context are synchronized with the current GL context.
.PP
\fBParameters:\fP
.RS 4
\fIdptr\fP - Returned mapped base pointer 
.br
\fIsize\fP - Returned size of mapping 
.br
\fIbuffer\fP - The name of the buffer object to map
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_MAP_FAILED\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsMapResources\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLMapBufferObjectAsync (\fBCUdeviceptr\fP * dptr, size_t * size, GLuint buffer, \fBCUstream\fP hStream)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Maps the buffer object specified by \fCbuffer\fP into the address space of the current CUDA context and returns in \fC*dptr\fP and \fC*size\fP the base pointer and size of the resulting mapping.
.PP
There must be a valid OpenGL context bound to the current thread when this function is called. This must be the same context, or a member of the same shareGroup, as the context that was bound when the buffer was registered.
.PP
Stream \fChStream\fP in the current CUDA context is synchronized with the current GL context.
.PP
\fBParameters:\fP
.RS 4
\fIdptr\fP - Returned mapped base pointer 
.br
\fIsize\fP - Returned size of mapping 
.br
\fIbuffer\fP - The name of the buffer object to map 
.br
\fIhStream\fP - Stream to synchronize
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP, \fBCUDA_ERROR_MAP_FAILED\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsMapResources\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLRegisterBufferObject (GLuint buffer)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Registers the buffer object specified by \fCbuffer\fP for access by CUDA. This function must be called before CUDA can map the buffer object. There must be a valid OpenGL context bound to the current thread when this function is called, and the buffer name is resolved by that context.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP - The name of the buffer object to register.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_ALREADY_MAPPED\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsGLRegisterBuffer\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLSetBufferObjectMapFlags (GLuint buffer, unsigned int Flags)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Sets the map flags for the buffer object specified by \fCbuffer\fP.
.PP
Changes to \fCFlags\fP will take effect the next time \fCbuffer\fP is mapped. The \fCFlags\fP argument may be any of the following:
.IP "\(bu" 2
CU_GL_MAP_RESOURCE_FLAGS_NONE: Specifies no hints about how this resource will be used. It is therefore assumed that this resource will be read from and written to by CUDA kernels. This is the default value.
.IP "\(bu" 2
CU_GL_MAP_RESOURCE_FLAGS_READ_ONLY: Specifies that CUDA kernels which access this resource will not write to this resource.
.IP "\(bu" 2
CU_GL_MAP_RESOURCE_FLAGS_WRITE_DISCARD: Specifies that CUDA kernels which access this resource will not read from this resource and will write over the entire contents of the resource, so none of the data previously stored in the resource will be preserved.
.PP
.PP
If \fCbuffer\fP has not been registered for use with CUDA, then \fBCUDA_ERROR_INVALID_HANDLE\fP is returned. If \fCbuffer\fP is presently mapped for access by CUDA, then \fBCUDA_ERROR_ALREADY_MAPPED\fP is returned.
.PP
There must be a valid OpenGL context bound to the current thread when this function is called. This must be the same context, or a member of the same shareGroup, as the context that was bound when the buffer was registered.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP - Buffer object to unmap 
.br
\fIFlags\fP - Map flags
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_HANDLE\fP, \fBCUDA_ERROR_ALREADY_MAPPED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsResourceSetMapFlags\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLUnmapBufferObject (GLuint buffer)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Unmaps the buffer object specified by \fCbuffer\fP for access by CUDA.
.PP
There must be a valid OpenGL context bound to the current thread when this function is called. This must be the same context, or a member of the same shareGroup, as the context that was bound when the buffer was registered.
.PP
All streams in the current CUDA context are synchronized with the current GL context.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP - Buffer object to unmap
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsUnmapResources\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLUnmapBufferObjectAsync (GLuint buffer, \fBCUstream\fP hStream)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Unmaps the buffer object specified by \fCbuffer\fP for access by CUDA.
.PP
There must be a valid OpenGL context bound to the current thread when this function is called. This must be the same context, or a member of the same shareGroup, as the context that was bound when the buffer was registered.
.PP
Stream \fChStream\fP in the current CUDA context is synchronized with the current GL context.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP - Name of the buffer object to unmap 
.br
\fIhStream\fP - Stream to synchronize
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsUnmapResources\fP 
.RE
.PP

.SS "\fBCUresult\fP cuGLUnregisterBufferObject (GLuint buffer)"
.PP
\fBDeprecated\fP
.RS 4
This function is deprecated as of Cuda 3.0.
.RE
.PP
Unregisters the buffer object specified by \fCbuffer\fP. This releases any resources associated with the registered buffer. After this call, the buffer may no longer be mapped for access by CUDA.
.PP
There must be a valid OpenGL context bound to the current thread when this function is called. This must be the same context, or a member of the same shareGroup, as the context that was bound when the buffer was registered.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP - Name of the buffer object to unregister
.RE
.PP
\fBReturns:\fP
.RS 4
\fBCUDA_SUCCESS\fP, \fBCUDA_ERROR_DEINITIALIZED\fP, \fBCUDA_ERROR_NOT_INITIALIZED\fP, \fBCUDA_ERROR_INVALID_CONTEXT\fP, \fBCUDA_ERROR_INVALID_VALUE\fP 
.RE
.PP
\fBNote:\fP
.RS 4
Note that this function may also return error codes from previous, asynchronous launches.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcuGraphicsUnregisterResource\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code.
