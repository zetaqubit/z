.TH "cudaTextureDesc" 3 "12 Jan 2017" "Version 6.0" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cudaTextureDesc \- 
.SH SYNOPSIS
.br
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "enum \fBcudaTextureAddressMode\fP \fBaddressMode\fP [3]"
.br
.ti -1c
.RI "float \fBborderColor\fP [4]"
.br
.ti -1c
.RI "enum \fBcudaTextureFilterMode\fP \fBfilterMode\fP"
.br
.ti -1c
.RI "unsigned int \fBmaxAnisotropy\fP"
.br
.ti -1c
.RI "float \fBmaxMipmapLevelClamp\fP"
.br
.ti -1c
.RI "float \fBminMipmapLevelClamp\fP"
.br
.ti -1c
.RI "enum \fBcudaTextureFilterMode\fP \fBmipmapFilterMode\fP"
.br
.ti -1c
.RI "float \fBmipmapLevelBias\fP"
.br
.ti -1c
.RI "int \fBnormalizedCoords\fP"
.br
.ti -1c
.RI "enum \fBcudaTextureReadMode\fP \fBreadMode\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
CUDA texture descriptor 
.SH "Field Documentation"
.PP 
.SS "enum \fBcudaTextureAddressMode\fP \fBcudaTextureDesc::addressMode\fP[3]"
.PP
Texture address mode for up to 3 dimensions 
.SS "float \fBcudaTextureDesc::borderColor\fP[4]"
.PP
Texture Border Color 
.SS "enum \fBcudaTextureFilterMode\fP \fBcudaTextureDesc::filterMode\fP"
.PP
Texture filter mode 
.SS "unsigned int \fBcudaTextureDesc::maxAnisotropy\fP"
.PP
Limit to the anisotropy ratio 
.SS "float \fBcudaTextureDesc::maxMipmapLevelClamp\fP"
.PP
Upper end of the mipmap level range to clamp access to 
.SS "float \fBcudaTextureDesc::minMipmapLevelClamp\fP"
.PP
Lower end of the mipmap level range to clamp access to 
.SS "enum \fBcudaTextureFilterMode\fP \fBcudaTextureDesc::mipmapFilterMode\fP"
.PP
Mipmap filter mode 
.SS "float \fBcudaTextureDesc::mipmapLevelBias\fP"
.PP
Offset applied to the supplied mipmap level 
.SS "int \fBcudaTextureDesc::normalizedCoords\fP"
.PP
Indicates whether texture reads are normalized or not 
.SS "enum \fBcudaTextureReadMode\fP \fBcudaTextureDesc::readMode\fP"
.PP
Texture read mode 

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code.
