.TH "Initialization and Cleanup" 3 "12 Jan 2017" "Version 1.1" "NVML" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Initialization and Cleanup \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBnvmlReturn_t\fP DECLDIR \fBnvmlInit\fP (void)"
.br
.ti -1c
.RI "\fBnvmlReturn_t\fP DECLDIR \fBnvmlShutdown\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This chapter describes the methods that handle NVML initialization and cleanup. It is the user's responsibility to call \fBnvmlInit()\fP before calling any other methods, and \fBnvmlShutdown()\fP once NVML is no longer being used. 
.SH "Function Documentation"
.PP 
.SS "\fBnvmlReturn_t\fP DECLDIR nvmlInit (void)"
.PP
Initialize NVML, but don't initialize any GPUs yet.
.PP
\fBNote:\fP
.RS 4
In NVML 5.319 new nvmlInit_v2 has replaced nvmlInit'_v1' (default in NVML 4.304 and older) that did initialize all GPU devices in the system.
.RE
.PP
This allows NVML to communicate with a GPU when other GPUs in the system are unstable or in a bad state. When using this API, GPUs are discovered and initialized in nvmlDeviceGetHandleBy* functions instead.
.PP
\fBNote:\fP
.RS 4
To contrast nvmlInit_v2 with nvmlInit'_v1', NVML 4.304 nvmlInit'_v1' will fail when any detected GPU is in a bad or unstable state.
.RE
.PP
For all products.
.PP
This method, should be called once before invoking any other methods in the library. A reference count of the number of initializations is maintained. Shutdown only occurs when the reference count reaches zero.
.PP
\fBReturns:\fP
.RS 4
.IP "\(bu" 2
\fBNVML_SUCCESS\fP if NVML has been properly initialized
.IP "\(bu" 2
\fBNVML_ERROR_DRIVER_NOT_LOADED\fP if NVIDIA driver is not running
.IP "\(bu" 2
\fBNVML_ERROR_NO_PERMISSION\fP if NVML does not have permission to talk to the driver
.IP "\(bu" 2
\fBNVML_ERROR_UNKNOWN\fP on any unexpected error 
.PP
.RE
.PP

.SS "\fBnvmlReturn_t\fP DECLDIR nvmlShutdown (void)"
.PP
Shut down NVML by releasing all GPU resources previously allocated with \fBnvmlInit()\fP.
.PP
For all products.
.PP
This method should be called after NVML work is done, once for each call to \fBnvmlInit()\fP A reference count of the number of initializations is maintained. Shutdown only occurs when the reference count reaches zero. For backwards compatibility, no error is reported if \fBnvmlShutdown()\fP is called more times than \fBnvmlInit()\fP.
.PP
\fBReturns:\fP
.RS 4
.IP "\(bu" 2
\fBNVML_SUCCESS\fP if NVML has been properly shut down
.IP "\(bu" 2
\fBNVML_ERROR_UNINITIALIZED\fP if the library has not been successfully initialized
.IP "\(bu" 2
\fBNVML_ERROR_UNKNOWN\fP on any unexpected error 
.PP
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for NVML from the source code.
